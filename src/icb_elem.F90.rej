diff a/src/icb_elem.F90 b/src/icb_elem.F90	(rejected hunks)
@@ -376,9 +376,6 @@ end subroutine FEM_3eval
 subroutine iceberg_elem4all(mesh, partit, elem, lon_deg, lat_deg) 
  USE MOD_MESH
  use MOD_PARTIT		!for myDim_nod2D, myList_elem2D
-!#ifdef use_cavity
-! use iceberg_params, only: reject_elem
-!#endif
  
  implicit none
  
@@ -398,30 +395,21 @@ type(t_partit), intent(inout), target :: partit
   
   if(i_have_element) then
    i_have_element= elem2D_nodes(1,elem) <= myDim_nod2D !1 PE still .true.
-#ifdef use_cavity
-   if( reject_elem(mesh, elem) ) then
+   if( (use_cavity) .and. (reject_elem(mesh, partit, elem) )) then
     elem=0 !reject element
     i_have_element=.false.
-    !write(*,*) 'elem4all: iceberg found in shelf region: elem = 0'
    else 
     elem=myList_elem2D(elem) !global now
    end if 
-#else
-   elem=myList_elem2D(elem) !global now
-#endif 
   end if
   call com_integer(partit, i_have_element,elem) !max 1 PE sends element here; 
 end subroutine iceberg_elem4all
 
 
  !***************************************************************************************************************************
- !***************************************************************************************************************************
 
 subroutine find_new_iceberg_elem(mesh, partit, old_iceberg_elem, pt, left_mype)
   use o_param
-!#ifdef use_cavity
-!  use iceberg_params, only: reject_elem
-!#endif
 
   implicit none
   
@@ -461,14 +449,11 @@ do m=1, 3
   if (ALL(werte2D <= 1.+ 1.0e-07) .AND. ALL(werte2D >= 0.0- 1.0e-07) ) then
    old_iceberg_elem=elem_containing_n2
    
-#ifdef use_cavity
-   if( reject_elem(mesh, old_iceberg_elem) ) then
+   if( (use_cavity) .and. (reject_elem(mesh, partit, old_iceberg_elem) )) then
       left_mype=1.0
       !write(*,*) 'iceberg found in shelf region: left_mype = 1'
       old_iceberg_elem=ibelem_tmp
    end if
-#endif
-
    RETURN 
   end if
  end do
