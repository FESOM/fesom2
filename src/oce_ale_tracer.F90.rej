diff a/src/oce_ale_tracer.F90 b/src/oce_ale_tracer.F90	(rejected hunks)
@@ -109,6 +109,8 @@ subroutine solve_tracers_ale(mesh)
     use Toy_Channel_Soufflet
     use adv_tracers_ale_interface
     use diff_tracers_ale_interface
+!   Include decay constants of 14C and 39Ar for (transient) tracer simulations:
+    use mod_transit, only: decay14, decay39
     
     implicit none
     type(t_mesh), intent(in) , target :: mesh
@@ -144,7 +146,11 @@ subroutine solve_tracers_ale(mesh)
         ! diffuse tracers 
         if (flag_debug .and. mype==0)  print *, achar(27)//'[37m'//'         --> call diff_tracers_ale'//achar(27)//'[0m'
         call diff_tracers_ale(tr_num, mesh)
-        
+
+!       Radioactive decay of 14C and 39Ar
+        if (tracer_id(tr_num) == 14) tr_arr(:,:,tr_num) = tr_arr(:,:,tr_num) * exp(-decay14 * dt)
+        if (tracer_id(tr_num) == 39) tr_arr(:,:,tr_num) = tr_arr(:,:,tr_num) * exp(-decay39 * dt)
+
         ! relax to salt and temp climatology
         if (flag_debug .and. mype==0)  print *, achar(27)//'[37m'//'         --> call relax_to_clim'//achar(27)//'[0m'
         call relax_to_clim(tr_num, mesh)
@@ -1008,6 +1014,13 @@ FUNCTION bc_surface(n, id, mesh)
   USE g_forcing_arrays
   USE g_PARSUP, only: mype, par_ex
   USE g_config
+! The following modules and variables are needed for (transient) abiotic tracer simulations
+  use mod_transit
+  use o_mesh                         ! MB needed for transient tracer simulations ??
+  use g_clock, only: month, yearnew  ! MB yearnew is needed for transient tracer simulations
+  use i_arrays, only: a_ice
+  use o_param
+
   implicit none
   
   type(t_mesh), intent(in) , target :: mesh  
@@ -1017,6 +1030,21 @@ FUNCTION bc_surface(n, id, mesh)
 
   !  --> is_nonlinfs=1.0 for zelvel,zstar ....                            
   !  --> is_nonlinfs=0.0 for linfs
+  
+  if (use_transit) then
+#if defined (__oasis)
+!   SLP and wind speed in coupled setups. This is a makeshift solution
+!   as long as the true values are not provided by the AGCM / OASIS.
+    press_a = mean_slp 
+    wind_2  = speed_2(stress_atmoce_x(n), stress_atmoce_y(n))
+#else
+    press_a = press_air(n)
+    wind_2  = u_wind(n)**2 + v_wind(n)**2
+#endif
+  
+  end if
+  
+  
   SELECT CASE (id)
     CASE (0)
         bc_surface=-dt*(heat_flux(n)/vcpw + tr_arr(mesh%ulevels_nod2D(n),n,1)*water_flux(n)*is_nonlinfs)
