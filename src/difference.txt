12c12
<   !_____________________________________________________________________________
---
> 
16,17c16
<   
<   !_____________________________________________________________________________
---
> 
24d22
<   !_____________________________________________________________________________
26,31c24,27
< ! kh 01.03.21 paths in test environments can easily become longer than 100 characters (the former value) 
<   character(MAX_PATH)        :: MeshPath='./mesh/'
<   character(MAX_PATH)        :: ClimateDataPath='./hydrography/'
<   character(MAX_PATH)        :: TideForcingPath='./tide_forcing/'
<   character(MAX_PATH)        :: ResultPath='./result/'
<   character(20)              :: MeshId='NONE'
---
>   character(100)         :: MeshPath='./mesh/'
>   character(100)         :: ClimateDataPath='./hydrography/'
>   character(100)         :: TideForcingPath='./tide_forcing/'
>   character(1000)        :: ResultPath='./result/'
33,35c29,30
<        TideForcingPath, ResultPath, MeshId
<        
<   !_____________________________________________________________________________
---
>        TideForcingPath, ResultPath
> 
39,64c34
<   character(3)           :: restart_length_unit='m'
<   integer                :: raw_restart_length=1
<   character(3)           :: raw_restart_length_unit='m'
<   integer                :: bin_restart_length=1
<   character(3)           :: bin_restart_length_unit='m'
<   
<   namelist /restart_log/   restart_length    , restart_length_unit, & 
<                            raw_restart_length, raw_restart_length_unit, &
<                            bin_restart_length, bin_restart_length_unit, &
<                            logfile_outfreq
<   !_____________________________________________________________________________
<   ! *** ale_def ***
<   ! Which ALE case to use : 'linfs', 'zlevel', 'zstar'
<   character(20)          :: which_ALE='linfs' 
<   
<   ! use partial bottom cell configuration .true./.false. 
<   logical                :: use_partial_cell=.false.  
<   
<   ! if a thicker partial bottom layer thickness is more realistic than always 
<   ! apply it, BUT when a thinner partial bottom layer thickness is more realistic than 
<   ! only apply it when the initial full cell bottom layer thickness is above the 
<   ! treshhold partial_cell_tresh to not allow already thin layers to become even 
<   ! thinner. e.g 
<   ! partial_cell_tresh=10 --> thinner partial bottom cells will be only applied for initial 
<   ! bottom layer thicknesses larger than 10m 
<   real(kind=WP)          :: partial_cell_thresh=0.0_WP 
---
>   character              :: restart_length_unit='m'
65a36,40
>   namelist /restart_log/   restart_length, restart_length_unit, logfile_outfreq
> 
>   ! *** ale_def ***
>   character(20)          :: which_ALE='linfs' ! 'zlevel', 'zstar', 'zstar-weighted', 'ztilde'
>   logical                :: use_partial_cell=.false.  ! use partial bottom cell configuration  
69d43
<   
73d46
<   
77c50
<   namelist /ale_def/ which_ALE, use_partial_cell, partial_cell_thresh, min_hnode, lzstar_lev, max_ice_loading
---
>   namelist /ale_def/ which_ALE, use_partial_cell, min_hnode, lzstar_lev, max_ice_loading
79d51
<   !_____________________________________________________________________________
86,101c58,64
<   real(kind=WP)          :: alphaEuler=50.  ! [degree] Euler angles, convention:
<   real(kind=WP)          :: betaEuler=15.   ! first around z, then around new x,
<   real(kind=WP)          :: gammaEuler=-90. ! then around new z.
<                                             ! Set to zeros to work with
<                                             ! geographical coordinates
<   integer                :: thers_zbar_lev=5     ! minimum number of levels to be                                            
<   character(len=5)       :: which_depth_n2e='mean'    
<   
<   logical                :: use_depthonelem =.false.
<   character(len=10)      :: use_depthfile='aux3d'   ! 'aux3d', 'depth@'        
<   logical                :: use_cavityonelem=.false.
<   
<   namelist /geometry/   cartesian, fplane, &
<                         cyclic_length, rotated_grid, force_rotation, &
<                         alphaEuler, betaEuler, gammaEuler, &
<                         which_depth_n2e, use_depthonelem, use_cavityonelem, use_depthfile
---
>   real(kind=WP)          :: alphaEuler=50. 	! [degree] Euler angles, convention:
>   real(kind=WP)          :: betaEuler=15.  	! first around z, then around new x,
>   real(kind=WP)          :: gammaEuler=-90.	! then around new z.
>   				                ! Set to zeros to work with
> 						! geographical coordinates
>   namelist /geometry/  cartesian, fplane, &
>        cyclic_length, rotated_grid, alphaEuler, betaEuler, gammaEuler, force_rotation
103d65
<   !_____________________________________________________________________________
106,107c68
<   logical                       :: use_flpyrcheck   =.true.
<   namelist /calendar/ include_fleapyear, use_flpyrcheck
---
>   namelist /calendar/ include_fleapyear
109,110c70
<   !_____________________________________________________________________________
<   ! *** machine ***
---
>    ! *** machine ***
115d74
<   !_____________________________________________________________________________
119,153c78,82
<                                                    ! to be supplied
<   ! *** icebergs ***
<   logical                       :: use_icebergs=.false.
<   logical                       :: turn_off_hf=.false.
<   logical                       :: turn_off_fw=.false.
<   logical                       :: use_icesheet_coupling=.false.  
<   integer                       :: ib_num=0
<   integer                       :: steps_per_ib_step=8
< 
< ! kh 02.02.21
< ! ib_async_mode == 0: original sequential behavior for both ice sections (for testing purposes, creating reference results etc.)
< ! ib_async_mode == 1: OpenMP code active to overlapped computations in first (ocean ice) and second (icebergs) parallel section
< ! ib_async_mode == 2: OpenMP code active but computations still serialized via spinlock (for testing purposes)
<   integer                       :: ib_async_mode=0
<   integer                       :: thread_support_level_required=3 ! 2 = MPI_THREAD_SERIALIZED, 3 = MPI_THREAD_MULTIPLE
< 
<   namelist /icebergs/ use_icebergs, turn_off_hf, turn_off_fw, use_icesheet_coupling, ib_num, steps_per_ib_step, ib_async_mode, thread_support_level_required
< 
< !wiso-code!!!
<   logical                       :: lwiso  =.false.  ! enable isotope?
< !wiso-code!!!
<   logical                       :: use_floatice = .false.
<   logical                       :: use_cavity = .false. ! switch on/off cavity usage
<   logical                       :: use_cavity_partial_cell = .false. ! switch on/off cavity usage
<   logical                       :: use_cavity_fw2press = .true. ! switch on/off cavity+zstar input of freshwater leads to increase in pressure
<   real(kind=WP)                 :: cavity_partial_cell_thresh=0.0_WP ! same as partial_cell_tresh but for surface
<   logical                       :: toy_ocean=.false. ! Ersatz forcing has to be supplied
<   character(100)                :: which_toy="soufflet" 
<   logical                       :: flag_debug=.false.    ! prints name of actual subroutine he is in 
<   logical                       :: flag_warn_cflz=.true. ! switches off cflz warning
<   logical                       :: use_transit=.false.    ! switches off transient tracers
<   namelist /run_config/ use_ice,use_floatice, use_sw_pene, use_cavity, & 
<                         use_cavity_partial_cell, cavity_partial_cell_thresh, &
<                         use_cavity_fw2press, toy_ocean, which_toy, flag_debug, flag_warn_cflz, lwiso, &
<                         use_transit
---
>   logical 						:: use_floatice = .false.
>   logical                       :: toy_ocean=.true. ! Ersatz forcing has to be supplied
>   character(100)                :: which_toy="nemo" 
>   logical                       :: flag_debug=.false.
>   namelist /run_config/ use_ice,use_floatice, use_sw_pene, toy_ocean, which_toy, flag_debug
155d83
<   !_____________________________________________________________________________
157c85
<   real(kind=WP)                 :: dt
---
>   real(kind=WP)            	:: dt
160c88
<   real(kind=WP)                 :: rtime_ice=0.0, rtime_tot=0.0
---
>   real(kind=WP)             	:: rtime_ice=0.0, rtime_tot=0.0
163c91,94
<   real(kind=WP)                 :: dummy=1.e10
---
>   real(kind=WP)             	:: dummy=1.e10
>   !real(kind=WP)             	:: SB_l
>   !real(kind=WP)             	:: SB_s
> 
166a98
> 
